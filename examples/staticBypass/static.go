package main

import (
	"github.com/mortimus/maldev/pkg/maldev"
	"github.com/mortimus/maldev/pkg/shellcode"
)

// encrypter.exe -calc -enc aes
var key []byte = []byte("RZUmcK8GrgpSeYWujP8DSMnBq4jswuAu")
var encryptedData = []byte{
	0xDB, 0x96, 0xEA, 0xC1, 0xFB, 0x10, 0xA2, 0xC8, 0x95, 0x5B, 0xD0, 0xDD, 0x90, 0x59, 0x4E, 0xE1,
	0x65, 0xD0, 0x6D, 0x0E, 0xE5, 0x01, 0xDE, 0x12, 0x1C, 0xDB, 0x9F, 0x79, 0x78, 0xA1, 0x77, 0xC7,
	0xFD, 0xE7, 0x18, 0x21, 0xE4, 0x83, 0x86, 0xFE, 0x36, 0xC4, 0x83, 0xAE, 0xC2, 0x7E, 0x15, 0x99,
	0xF5, 0xCA, 0xED, 0xAE, 0x23, 0x30, 0xCD, 0xE5, 0x6C, 0xC7, 0xB5, 0x0B, 0xB9, 0x0F, 0x8E, 0x5F,
	0x9F, 0xFE, 0x50, 0x2C, 0xD3, 0x44, 0x32, 0x25, 0x88, 0x53, 0xBE, 0xF7, 0xF4, 0x8A, 0xCC, 0x25,
	0x97, 0xF2, 0x5B, 0x4B, 0x0B, 0xFE, 0xF4, 0xC6, 0x54, 0x1E, 0xDA, 0x10, 0x75, 0xBD, 0xD1, 0xD9,
	0x2E, 0x70, 0x55, 0xC7, 0x19, 0x7D, 0xA4, 0xEC, 0x13, 0x6E, 0x07, 0x55, 0x42, 0xED, 0x99, 0x1D,
	0xBF, 0x25, 0x1B, 0x58, 0x70, 0x11, 0xD3, 0xE4, 0x5D, 0x1D, 0x9B, 0x2E, 0x61, 0xF1, 0x26, 0xB1,
	0x70, 0xA1, 0xFB, 0xCB, 0xAC, 0xB6, 0x3B, 0x93, 0xFE, 0xF9, 0x44, 0xD5, 0x8A, 0xC0, 0xAF, 0x20,
	0x3F, 0x84, 0x86, 0x37, 0x72, 0xEB, 0x69, 0xA5, 0x9B, 0x85, 0x9C, 0x5B, 0x1B, 0xA0, 0x5B, 0xAB,
	0xE2, 0x27, 0x89, 0x1E, 0x88, 0x1C, 0xD7, 0xEF, 0x06, 0xBB, 0x62, 0xD2, 0xEB, 0xEE, 0x0A, 0x1B,
	0x09, 0x3A, 0x8E, 0xDA, 0x79, 0x57, 0x5C, 0x85, 0x9A, 0x01, 0x94, 0x80, 0x06, 0xF4, 0x01, 0x4A,
	0x5C, 0x17, 0x67, 0xE4, 0x13, 0xCF, 0x80, 0xBA, 0x08, 0x89, 0x68, 0xE9, 0x08, 0x72, 0x64, 0x75,
	0x49, 0xE2, 0x30, 0x84, 0x6D, 0x43, 0xCC, 0x47, 0xBA, 0x72, 0x61, 0x8B, 0xE5, 0x8C, 0x88, 0x5B,
	0x66, 0xC9, 0xF1, 0xDB, 0x92, 0x2C, 0x8A, 0x21, 0xCC, 0xD8, 0x10, 0x9E, 0x30, 0x43, 0x73, 0x5C,
	0x4C, 0xB2, 0x77, 0xAC, 0x9A, 0xA3, 0xD3, 0x25, 0x8A, 0x33, 0xE3, 0xAA, 0x2D, 0x15, 0x8D, 0x0A,
	0x5E, 0xC9, 0x39, 0x05, 0x4D, 0x3C, 0x70, 0x3A, 0x4A, 0x39, 0x6A, 0x65, 0x26, 0xBD, 0x2D, 0xBC,
	0xA0, 0xA6, 0x7E, 0x20, 0x53, 0x00, 0x97, 0x24, 0x44, 0x63, 0x52, 0xF1, 0xEE, 0x30, 0x47, 0xC2,
	0x48, 0xC9, 0xC3, 0x0B,
}

func main() {
	shellcode.Print("Key", 0, key)
	shellcode.Print("Encrypted Data", 0, encryptedData)
	// decrypt data
	decryptedData, err := maldev.AESDecrypt(encryptedData, key)
	if err != nil {
		shellcode.Print("Error", 0, []byte(err.Error()))
	}
	shellcode.Print("Decrypted Data", 0, decryptedData)
}
